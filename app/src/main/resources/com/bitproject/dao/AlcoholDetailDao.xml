<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
  namespace => 인터페이스의 패키지 및 이름과 일치해야 한다.
 -->
<mapper namespace="com.bitproject.dao.AlcoholDetailDao">

  <!-- 테이블의 컬럼과 객체 필드를 연결한다. -->
  <resultMap type="alcoholDetail" id="alcoholDetailMap">
    <id column="alcohol_detail_no" property="alcoholDetailNo"/>
    <result column="alcohol_type_no" property="alcoholTypeNo"/>
    <result column="alcohol_name" property="alcoholName"/>
    <result column="degree" property="degree"/>
    <result column="brand" property="brand"/>
    <result column="origin" property="origin"/>
    <result column="volume" property="volume"/>
    <result column="characteristic" property="characteristic"/>
    <result column="img" property="img"/>
    
    <association property="writer" javaType="member">
      <id column="mno" property="mno"/>
    </association>


<collection property="stores" ofType="Store">
  <id column="store_no" property="storeNo"/>
    <result column="business_registration_no" property="businessRegistrationNo"/>
    <result column="business_registration" property="businessRegistration"/>
    <result column="store_name" property="storeName"/>
    <result column="address" property="address"/>
    <result column="tel" property="tel"/>
    <result column="hour" property="hour"/>
    <result column="introduction" property="introduction"/>
    <result column="evaluation_score" property="evaluationScore"/>
    <result column="reservation_accept" property="reservationAccept"/>
    <result column="max_member" property="maxMember"/>
    <result column="lat" property="lat"/>
    <result column="lng" property="lng"/>
    <result column="place_id" property="placeId"/>
    <result column="oper" property="oper"/>
    <result column="status" property="status"/>
  </collection>

  <collection property="storeImgs" ofType="storeImg">
    <id column="store_img_no" property="storeImgNo"/>
    <result column="store_no" property="storeNo"/>
    <result column="store_img" property="storeImg"/>
  </collection>
<!-- 
  <collection property="alcoholSales" ofType="alcoholSales">
    <result column="store_no" property="storeNo"/>
    <result column="alcohol_detail_no" property="alcoholDetailNo"/>
    <result column="price" property="price"/>
  </collection>
 -->
  </resultMap>
  
    <select id="countAll" resultType="int">
    select count(*) from alcohol_Detail
  </select>
  
  <select id="countByTarget" resultType="int" parameterType="int">
    select count(*) from alcohol_Detail
    where alcohol_type_no=#{targetNo}
  </select>


  <!--
    id => 인터페이스의 메서드 이름과 일치해야 한다.
   -->
  <select id="findAll" resultMap="alcoholDetailMap">
    select
      alcohol_detail_no,
      alcohol_type_no,
      alcohol_name,
      degree,
      brand,
      origin,
      volume,
      characteristic,
      img
    from
      alcohol_detail
    order by
      alcohol_type_no asc
      limit #{offset}, #{rowCount}
  </select>
  
  <!-- targetList -->
<select id="findByTarget" resultMap="alcoholDetailMap">
    select
      alcohol_detail_no,
      alcohol_type_no,
      alcohol_name,
      degree,
      brand,
      origin,
      volume,
      characteristic,
      img
    from
      alcohol_detail
    where alcohol_type_no=#{targetNo}
    order by
      alcohol_type_no asc
      limit #{offset}, #{rowCount}
  </select>

  

  <insert id="insert" parameterType="alcoholDetail">
    insert into alcohol_detail(
      writer,
      alcohol_type_no,
      alcohol_name,
      degree,
      brand,
      origin,
      volume,
      characteristic
    )
    values(
    #{writer.mno},
    #{alcoholTypeNo},
    #{alcoholName},
    #{degree},
    #{brand},
    #{origin},
    #{volume},
    #{characteristic}
    )
  </insert>


	<select id="findByNo" resultMap="alcoholDetailMap" parameterType="int">
select
  d.alcohol_detail_no,
  d.alcohol_type_no,
  d.alcohol_name,
  d.degree,
  d.brand,
  d.origin,
  d.volume,
  d.img,
  d.characteristic,
  alcs.store_no,
  st.store_name,
  st.evaluation_score,
  st.lat,
  st.lng,
  st.status,
  simg.store_img
from
  alcohol_detail d
  left outer join alcohol_sales alcs on d.alcohol_detail_no=alcs.alcohol_detail_no
  left outer join store st on alcs.store_no=st.store_no
  left outer join store_img simg on alcs.store_no=simg.store_no
where
  d.alcohol_detail_no=#{no}

  </select>
  
  <select id="findByValue" resultMap="alcoholDetailMap" parameterType="String">
      select
      alcohol_detail_no,
      alcohol_type_no,
      alcohol_name,
      degree,
      brand,
      origin,
      volume,
      characteristic,
      img
    from 
      alcohol_detail 
    where ${filt} like CONCAT('%',#{value},'%')
</select>


<!--   <update id="update" parameterType="alcoholDetail">
    update alcohol_detail set
    alcohol_type_no=#{alcoholTypeNo},
    name=#{name},
    degree=#{degree},
    brand=#{brand},
    origin=#{origin},
    volume=#{volume},
    characteristic=#{characteristic},
    img=#{img}
    where
      alcohol_detail_no=#{no}
  </update>


  <delete id="delete" parameterType="int">
    delete from alcohol_detail
    where alcohol_detail_no=#{no}
  </delete>

-->
</mapper>
