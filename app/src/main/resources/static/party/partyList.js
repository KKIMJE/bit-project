// import { partyList } from '../common/api/apiList.js';

var pbody = document.querySelector("#party-body")
var dbody = document.querySelector("#my-position")

/****************
    Î¶¨Ïä§Ìä∏ Ï∂úÎ†•
****************/
fetch("/party/list")
.then(function(response) {
    return response.json();
})
.then(function(result) {      
    for (var party of result) {
    pbody.innerHTML += `<a href="/party/partyDetail.html" class="party-list"> 
                        <div class="party-body-top">
                            <div class="party-title">${party.title}</div>
                            <div class="party-regdate">${party.regDate}</div>
                        </div> 
                        <div class="party-body-content">
                            <div class="leader-profile">
                                <img class="profile-img leader" src="img/profile_suzy.jpg" alt="Î∞©Ïû• ÌîÑÎ°úÌïÑ">
                                <span>${party.name}</span>
                            </div>
                            <div class="party-detail">
                        <div class="first-row">
                            <i class="fa-solid fa-calendar-days"></i>
                            <span>${party.meetingDate}</span>
                        </div>
                        <div class="second-row">
                            <div>
                                <span>
                                    <i class="fa-solid fa-bottle-droplet"></i>${party.alcoholType}</span>
                            </div>
                            <div>
                                <span>
                                    <i class="fa-solid fa-whiskey-glass"></i>${party.alcoholLimit}</span>
                            </div>
                            <div>
                                <span>
                                    <i class="fa-solid fa-won-sign"></i>${party.partyFee}</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="party-body-footer">
                    <div class="party-store">
                        <div class="store-distance" data-address="${party.address}">üößÍ≥ÑÏÇ∞Ï§ëüöß</div>
                    </div>
                    <div class="party-like">
                        <i class="fa-solid fa-heart like-click"></i>
                        1.3k
                    </div>
                    <div class="party-member-count">
                        <i class="fa-solid fa-user"></i>
                        <span>3</span>&nbsp;/&nbsp;<span>${party.maxMember}</span>
                    </div>
                </div>
            </a>
    `;
}
computeDistance();

});

// pbody.innerHTML += `<a href="/party/partyDetail.html&no=${party.partyNo}" class="party-list"> 


/********************************
    ÎÇ¥ÏúÑÏπòÏôÄ Í∞ÄÍ≤åÏôÄÏùò Í±∞Î¶¨ Í≥ÑÏÇ∞
********************************/
function computeDistance() {
    let distanceList = []
    $('.store-distance').each((index, e) => { // .store-distanceÎ•º Îã§ Ïû°ÏïÑÏôÄÏÑú nodelistÎ•º Î¶¨ÌÑ¥Ìï¥ eachÎ°ú Í∫ºÎÇ∏Îã§. html ÌÉúÍ∑∏ ÏûêÏ≤¥Í∞Ä Í∫ºÎÇ¥ÏßÄÎäîÎç∞, ÌÉúÍ∑∏Îì§Ïùò Î¶¨Ïä§Ìä∏Î•º eÎ°ú ÌïòÎÇòÏî© ÎΩëÏùÑ Í≤ÉÏù¥Îã§. e ÏïàÏóêÎäî Í∞Å Ï£ºÏÜåÍ∞Ä Îã¥Í≤®ÏûàÎã§.
      distanceList.push($(e).attr("data-address")) // eÏóê Ï†ÄÏû•Îêú Ï£ºÏÜå Í∞íÏùÑ ÎΩëÏïÑÏÑú Î∞∞Ïó¥Ïóê ÏòÆÍ≤® Îã¥ÏùÑ Í≤ÉÏù¥Îã§.
    })

    var mapContainer = document.getElementById('map')
    let geocoder = new kakao.maps.services.Geocoder();

    const addressSearch = address => { // Ï£ºÏÜåÎ•º ÎÑ£ÏúºÎ©¥
        return new Promise((resolve, reject) => { // addressÍ∞Ä Îì§Ïñ¥Í∞ÄÏÑú ÏúÑÎèÑÍ≤ΩÎèÑ Í∞íÏùÑ Ï∞æÏïòÏúºÎ©¥ resolveÏóê Îã¥ÏïÑ Î¶¨ÌÑ¥ÎêòÍ≥† ÏïÑÎãàÎùºÎ©¥ statusÍ∞Ä Î∞òÌôòÎêúÎã§.
          geocoder.addressSearch(address, function(result, status) {
            if (status === kakao.maps.services.Status.OK) {
              resolve({"lat": result[0].y, "lng": result[0].x});
            } else {
              reject(status);
            }
          });
        });
    };
  
    //GeoLocationÏùÑ Ïù¥Ïö©Ìï¥ÏÑú Ï†ëÏÜç ÏúÑÏπòÎ•º ÏñªÏñ¥ÏòµÎãàÎã§
    const geoLocation = () => { // ÌòÑÏúÑÏπò
      return new Promise((resolve) => {
        navigator.geolocation.getCurrentPosition(function(position) {
          resolve({"lat": position.coords.latitude, "lng": position.coords.longitude});
        })
      })
    }
  
    const distanceLine = (posList, curPos) => { // (Í∞ÄÍ≤åÏúÑÏπò, ÌòÑÏû¨ÏúÑÏπò)
      return new Promise((resolve) => {
  
        const dLines = []
  
        for(const position of posList) {
          // ÏÑ† Í∞ùÏ≤¥ ÏÉùÏÑ±
          let linePath = [ // Í∞ÄÍ≤åÏôÄ ÎÇ¥ ÏúÑÏπò ÏÇ¨Ïù¥Ïùò ÏÑ† Í∞ùÏ≤¥
            new kakao.maps.LatLng(position.lat, position.lng), // Í∞ÄÍ≤åÎßàÎã§ ÏúÑÎèÑ Í≤ΩÎèÑÍ∞Ä Î∞îÎÄåÎ©¥ÏÑú linePathÎ•º ÌòïÏÑ±
            new kakao.maps.LatLng(curPos.lat, curPos.lng) // ÎÇ¥ ÏúÑÏπò Í≥†Ï†ï
          ];
  
          let polyline = new kakao.maps.Polyline({
            path : linePath
          });
  
          dLines.push(Math.round(polyline.getLength())) // ÏÜåÏàòÏ†ê Ïù¥ÌïòÎ•º Î∞òÏò¨Î¶ºÌï¥ÌïòÏó¨ Îã§Ïãú Îã¥ÎäîÎã§.
        }
        resolve(dLines)
      })
    }
  
    // async-await
    (async () => { // ÏùµÎ™ÖÌï®Ïàò
      try {
          const positions = [];
          for(const address of distanceList) { // Í∞ÄÍ≤å ÏúÑÏπò
              const result = await addressSearch(address); // ÏúÑÎèÑ Í≤ΩÎèÑÍ∞íÏùÑ Îã¥ÎäîÎã§.
              positions.push(result)
          }
          // console.log(positions)
  
          const geoResult = await geoLocation() // ÌòÑÏúÑÏπò
          // console.log(geoResult)
  
          const distanceValue = await distanceLine(positions, geoResult) // Í∞ÄÍ≤å ÏúÑÏπòÏôÄ ÌòÑÏúÑÏπòÎ•º Ïù¥ÏùÄ ÏÑ†
          // console.log(distanceValue)
  
          $('.store-distance').each((index, e) => { // Í∞Å Î™®ÏûÑÏùò Í±∞Î¶¨ Í∞íÏùÑ ÎÑ£ÎäîÎã§.
            if (1000 < distanceValue[index]) {
              $(e).html((distanceValue[index] * 0.001).toFixed() + "km Ïù¥ÏÉÅ") // $(e).html : html ÌÉúÍ∑∏Ïùò ÎÇ¥Ïö©ÏùÑ Ïù¥Í±∏Î°ú Î∞îÍæ∏Í≤†Îã§. 
            } else {
              $(e).html(distanceValue[index] + "m")
            }
          })
  
      } catch (e) {
          console.log(e);
      }
    })();
  
  }


/*********************************
    ÌòÑÏ£ºÏÜå ÌòπÏùÄ ÏÑ§Ï†ïÎêú Ï£ºÏÜå Ï∂úÎ†•
*********************************/
// 1) URLÏóêÏÑú ÏøºÎ¶¨Ïä§Ìä∏ÎßÅ(query string)ÏùÑ Ï∂îÏ∂úÌïúÎã§.
var arr = location.href.split("?");
// console.log(arr);

if (arr.length == 1) {
var options = {
    enableHighAccuracy: true,
    timeout: 5000,
    maximumAge: 0
    };

function onGeoOk(position){

    let lat = position.coords.latitude;
    let lng = position.coords.longitude;
    
    //kakao REST APIÏóê get ÏöîÏ≤≠ÏùÑ Î≥¥ÎÇ∏Îã§.
    fetch(`https://dapi.kakao.com/v2/local/geo/coord2address.json?x=${lng}&y=${lat}&input_coord=WGS84`, {
        method: "GET",
        headers: {
            "Authorization": "KakaoAK 4e01457312537eb81d1716cd0d22bcfd"
        }
    })
    .then(function(response) {
        return response.json();
    })
    .then(function(result) {
        dbody.innerHTML = result.documents[0].address.address_name
        });
    }

function onGeoError(){
    alert("ÏúÑÏπòÍ∂åÌïúÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî");
}

//navigator.geolocation.getCurrentPosition(ÏúÑÏπòÎ∞õÎäîÌï®Ïàò, ÏóêÎü¨ÎÇ¨ÏùÑÎïå Ìï®Ïàò, ÏòµÏÖò)
navigator.geolocation.getCurrentPosition(onGeoOk,onGeoError,options);

} else {
  // 2) ÏøºÎ¶¨ Ïä§Ìä∏ÎßÅÏóêÏÑú Ï£ºÏÜå Í∞íÏùÑ Ï∂îÏ∂úÌïúÎã§.
  var qs = arr[1];
  // console.log(qs);

  var params = new URLSearchParams(qs);
  var myposition = params.get("myposition");

  if (myposition == null) {
    alert("Ï£ºÏÜåÍ∞Ä Ïò¨Î∞îÎ•¥ÏßÄ ÏïäÏäµÎãàÎã§!");
    throw "ÌååÎùºÎØ∏ÌÑ∞ Ïò§Î•ò!";
  }

  dbody.innerHTML = myposition;
  // console.log(myposition);
}

/***************
    result Ï†ïÎ≥¥
***************/
    // console.log(result)
    // address:
    // address_name: "Í≤ΩÍ∏∞ ÌïòÎÇ®Ïãú Ïã†Ïû•Îèô 281"
    // main_address_no: "281"
    // mountain_yn: "N"
    // region_1depth_name: "Í≤ΩÍ∏∞"
    // region_2depth_name: "ÌïòÎÇ®Ïãú"
    // region_3depth_name: "Ïã†Ïû•Îèô"

    // road_address:
    // address_name: "Í≤ΩÍ∏∞ÎèÑ ÌïòÎÇ®Ïãú ÎØ∏ÏÇ¨ÎåÄÎ°ú 505"
    // building_name: "ÎØ∏ÏÇ¨Î¶¨Í≤ΩÏ†ïÏû•„ÉªÏ°∞Ï†ïÏπ¥ÎàÑÍ≤ΩÍ∏∞Ïû•"
    // main_building_no: "505"
    // region_1depth_name: "Í≤ΩÍ∏∞"
    // region_2depth_name: "ÌïòÎÇ®Ïãú"
    // region_3depth_name: ""
    // road_name: "ÎØ∏ÏÇ¨ÎåÄÎ°ú"


/************************************
    ÌòÑÏúÑÏπòÎ°ú Ïû¨Í≤ÄÏÉâ(ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ®)
***********************************/
$('.position-reload').click(function() {
  // ÏßÄÎèÑÏóêÏÑú Ï£ºÏÜåÎ•º ÏÑ§Ï†ïÌñàÎã§Î©¥ ÌååÎùºÎØ∏ÌÑ∞Î•º Ï†úÍ±∞Ìï©ÎãàÎã§
    history.replaceState({}, null, location.pathname);
    location.reload();
});